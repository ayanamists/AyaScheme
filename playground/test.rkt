(let ([$5 (let ([$0 1]) (let ([$1 2]) (let ([$2 3]) (let ([$3 4])
                    (let ([_ (if (< (+ (global-value free_ptr) bytes)
                                    (global-value fromspace_end))
                                 (void)
                                 (collectbytes))])
                      (let ([$4 (allocate 32 (int int int int))])
                        (let ([_ (vector-set! $4 0 $0)])
                          (let ([_ (vector-set! $4 1 $1)])
                            (let ([_ (vector-set! $4 2 $2)])
                              (let ([_ (vector-set! $4 3 $3)])
                                $4))))))))))])
  (let ([$6 2])
    (let ([$7 3])
      (let ([$8 4])
        (let ([$9 (if (< (+ (global-value free_ptr) bytes)
                         (global-value fromspace_end))
                     (void)
                     (collectbytes))])
          (let ([_ (allocate 32 ((int int int int) int int int))])
            (let ([_ (vector-set! $9 0 $0)])
              (let ([_ (vector-set! $9 1 $1)])
                (let ([_ (vector-set! $9 2 $2)])
                  (let ([_ (vector-set! $9 3 $3)])
                    $9))))))))))

(let ([$5 (let ([$0 1])
            (let ([$1 2])
              (let ([$2 3])
                (let ([$3 4])
                  (let ([_ (if (let ([$6 (+ (global free_ptr) 32)])
                                 (< $6 (global fromspace_end)))
                               (void)
                               (collectbytes))])
                    (let ([$4 (allocate 32 (int int int int))])
                      (let ([_ (vector-set! $4 0 $0)])
                        (let ([_ (vector-set! $4 1 $1)])
                          (let ([_ (vector-set! $4 2 $2)])
                            (let ([_ (vector-set! $4 3 $3)])
                              $4))))))))))])
  (vector-ref $5 1))

_start:
  (var 0) = 1
  (var 1) = 2
  (var 2) = 3
  (var 3) = 4
  (var 6) = +(global(free_ptr), 32)
  if <((var 6), global(fromspace_end)) goto label(block-0)
  goto label(block-1)
_block-1:
  collect(32)
  goto block-0
_block-0:
  (var 4) = allocate(32, (int, int, int, int))
  vector-set!(4, 0, (var 0))
  vector-set!(4, 1, (var 1))
  vector-set!(4, 2, (var 2))
  vector-set!(4, 3, (var 3))
  (var 5) = (var 5)
  return vector-ref((var 5), 1)
